pcdsdevices.ccm.CCMEnergyWithVernier
====================================

.. currentmodule:: pcdsdevices.ccm

.. autoclass:: CCMEnergyWithVernier

   
   
    .. list-table:: Ophyd Device Components
       :header-rows: 1
       :widths: auto

       *  - Attribute
          - Class
          - Suffix
          - Docs
          - Kind
          - Notes
   
       *  -  energy
          -  :class:`~pcdsdevices.pseudopos.PseudoSingleInterface`
          -  
          -  PseudoSingle that moves the calculated CCM selected energy in keV.
          -  hinted
          -  Inherited from :class:`~pcdsdevices.ccm.CCMEnergy`
   
       *  -  alio
          -  :class:`~pcdsdevices.ccm.CCMAlio`
          -  
          -  The motor that rotates the CCM crystal.
          -  normal
          -  Inherited from :class:`~pcdsdevices.ccm.CCMEnergy`
   
       *  -  theta_deg
          -  :class:`~pcdsdevices.signal.InternalSignal`
          -  
          -  The crystal angle in degrees.
          -  normal
          -  Inherited from :class:`~pcdsdevices.ccm.CCMEnergy`
   
       *  -  wavelength
          -  :class:`~pcdsdevices.signal.InternalSignal`
          -  
          -  The wavelength picked by the CCM in Angstroms.
          -  normal
          -  Inherited from :class:`~pcdsdevices.ccm.CCMEnergy`
   
       *  -  resolution
          -  :class:`~pcdsdevices.signal.InternalSignal`
          -  
          -  A measure of how finely we can control the ccm output at this position in eV/um.
          -  normal
          -  Inherited from :class:`~pcdsdevices.ccm.CCMEnergy`
   
       *  -  vernier (FCpt)
          -  :class:`~pcdsdevices.beam_stats.BeamEnergyRequest`
          -  ``{hutch}``
          -  Requests ACR to move the Vernier.
          -  normal
          -  
   

   
   
   
   
   
   
   
   
   
   
   
   
   

   
   


    
    
    .. rubric:: Methods

    .. autosummary::
       :toctree: generated
    
       ~CCMEnergyWithVernier.alio_to_energy
       ~CCMEnergyWithVernier.camonitor
       ~CCMEnergyWithVernier.check_single
       ~CCMEnergyWithVernier.configure
       ~CCMEnergyWithVernier.describe
       ~CCMEnergyWithVernier.end_monitor_thread
       ~CCMEnergyWithVernier.energy_to_alio
       ~CCMEnergyWithVernier.forward
       ~CCMEnergyWithVernier.get
       ~CCMEnergyWithVernier.inverse
       ~CCMEnergyWithVernier.move
       ~CCMEnergyWithVernier.move_single
       ~CCMEnergyWithVernier.mv
       ~CCMEnergyWithVernier.mv_ginput
       ~CCMEnergyWithVernier.mvr
       ~CCMEnergyWithVernier.read
       ~CCMEnergyWithVernier.read_configuration
       ~CCMEnergyWithVernier.set
       ~CCMEnergyWithVernier.set_current_position
       ~CCMEnergyWithVernier.set_position
       ~CCMEnergyWithVernier.status
       ~CCMEnergyWithVernier.stop
       ~CCMEnergyWithVernier.summary
       ~CCMEnergyWithVernier.to_pseudo_tuple
       ~CCMEnergyWithVernier.to_real_tuple
       ~CCMEnergyWithVernier.trigger
       ~CCMEnergyWithVernier.tweak
       ~CCMEnergyWithVernier.umv
       ~CCMEnergyWithVernier.umvr
       ~CCMEnergyWithVernier.wait
       ~CCMEnergyWithVernier.wm
       ~CCMEnergyWithVernier.wm_update
    
    

    
    
    .. rubric:: Attributes

    .. autosummary::
    
       ~CCMEnergyWithVernier.composite_egu
       ~CCMEnergyWithVernier.concurrent
       ~CCMEnergyWithVernier.configuration_attrs
       ~CCMEnergyWithVernier.connected
       ~CCMEnergyWithVernier.egu
       ~CCMEnergyWithVernier.high_limit
       ~CCMEnergyWithVernier.hints
       ~CCMEnergyWithVernier.kind
       ~CCMEnergyWithVernier.limits
       ~CCMEnergyWithVernier.low_limit
       ~CCMEnergyWithVernier.moving
       ~CCMEnergyWithVernier.position
       ~CCMEnergyWithVernier.pseudo_positioners
       ~CCMEnergyWithVernier.real_position
       ~CCMEnergyWithVernier.real_positioners
       ~CCMEnergyWithVernier.sequential
       ~CCMEnergyWithVernier.settle_time
       ~CCMEnergyWithVernier.target
       ~CCMEnergyWithVernier.timeout
    
    